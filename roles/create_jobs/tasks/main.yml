---
- name: Enable sudo access to jenkins user 
  lineinfile:
    path: /etc/sudoers
    line: "jenkins ALL=(ALL) NOPASSWD: ALL"
  become: true

- name: Setup mongoDb for checkboxio
  copy:
    src: "templates/setup_mongodb.yml"
    dest: /var/lib/jenkins/setup_mongodb.yml
    owner: jenkins
    group: jenkins
    mode: 0666
  become: yes

#- name: Copy checkbox job script
#  template:
#    src: "checkbox_jenkins_jobs.yml"
#    dest: /home/vagrant/jobs/checkbox_jenkins_jobs.yml
#  become: yes

- name: Copy Checkbox.io Deployment jenkins job script
  template:
    src: "checkbox_jenkins_jobs.yml"
    dest: ~/jobs/{{checkbox_job}}.yml

- name: create jobs
 shell: 'cd  && jenkins-jobs --conf /home/vagrant/jenkins_jobs.ini update /home/vagrant/jobs'
 become: yes

- name: Put the script on server for build job
 template:
   src:  "iTrustjob.yml"
   dest: ~/jobs/{{iTrust_job}}.yml

- name: read admin pwd | Jenkins
  shell: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: adminpwd
  become: true

- jenkins_script:
   script: |
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    instance.disableSecurity()
    instance.save()
   user: admin
   password: "{{ adminpwd.stdout }}"

- name: Create job using job builder
  shell: "jenkins-jobs --conf {{ home_dir }}/jenkins_jobs.ini update {{ home_dir }}/jobs/"

- jenkins_script:
   script: |
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    instance.setSecurityRealm(hudsonRealm)
    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    strategy.setAllowAnonymousRead(false)
    instance.setAuthorizationStrategy(strategy)
    instance.save()
   user: admin
   password: "{{ adminpwd.stdout }}"

