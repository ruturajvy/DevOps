---
 # vars_files:
 #  - credentials.yml
  - name: Install jre8
    apt:
     name:  openjdk-8-jre
     state: present
     update_cache: yes
    become: true

  - name: Install required packages
    apt: 
      pkg: ['maven','git','vim','html-xml-utils','python3-pip','python-pip','python-dev','python-lxml','python3-setuptools','python-setuptools'] 
      state: present 
      update_cache: true
    become: true

  - name: Add jenkins repo key
    apt_key:
     url: https://pkg.jenkins.io/debian/jenkins.io.key
     state: present
    become: true

  - name: Add jenkins repo list file into sources.list.d
    apt_repository:
     repo: deb http://pkg.jenkins.io/debian-stable binary/
     state: present
    become: true

  - name: Install jenkins
    apt:
     name: jenkins
     state: present
     update_cache: yes
    become: true
  
  - name: Wait for a while
    wait_for: 
      port: 9000 
      delay: 20

  - name: read admin pwd
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: adminpwd
    become: true

  - name: unlock and add admin user
    jenkins_script:
     script: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount('jenkins', '${user_pwd}')
      instance.setSecurityRealm(hudsonRealm)
      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      strategy.setAllowAnonymousRead(false)
      instance.setAuthorizationStrategy(strategy)
      instance.save()
     args:
      user_pwd: "{{ user_password }}"
     user: admin
     password: "{{ adminpwd.stdout }}"
    become: true
    ignore_errors: yes

  - name: Complete setup wizard
    jenkins_script:
     script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
     user: admin
     password: "{{ adminpwd.stdout }}"
    become: true
    ignore_errors: yes
  - name: Removing Groovy Script so it doesn't create furthermore user
    file:
      path: "{{jenkins_home}}/init.groovy.d/security.groovy"
      state: absent
    become: true

  - name: Getting Jenkins CLI Jar
    get_url:
      url: "{{jenkins_url}}/jnlpJars/jenkins-cli.jar"
      dest: "/home/vagrant/"
      mode: 0755
  #  become: true

  - name: Install Jenkin Plugins
    jenkins_plugin:
      name: "{{ item }}"
      state: latest
      url_username: admin
      url_password: "{{ adminpwd.stdout }}"
      validate_certs: False
    with_items:
      - github
      - maven-plugin
      - jacoco
      - junit
      - test-stability
      - postbuildscript
      - build-timeout
      - postbuild-task
      - ws-cleanup
    become: true
    
  - name: Restart Jenkins
    service:
      name: jenkins
      state: restarted
    become: true

  - name: Install jenkins job builder
    pip:
      name: jenkins-job-builder
      state: present

  - name: Change Jenkins port
    lineinfile:
      path: /etc/default/jenkins
      regexp: '^HTTP_PORT=8080'
      line: 'HTTP_PORT=9000'
    become: true

  - name: Restart Jenkins
    service:
      name: jenkins
      state: restarted
    become: true

  - name: Delay added
    wait_for: 
      port: 9000 
      delay: 30
      
  - name: Check if Jenkins is running
    service:
      name: jenkins
      state: started


  - name: Copy private git SSH Key
    copy:
      src: ~/.ssh/git-key
      dest: /root/.ssh/git-key
      mode: 0400
    become: true

  - name: adding it to the ssh-agent
    shell: '{{item}}'
    become: true
    with_items:
      - cd /root/.ssh
      - eval "$(ssh-agent -s)" && ssh-add -k /root/.ssh/git-key


  - name: ssh config file copy for git ncsu
    copy:
      src: ~/.ssh/config
      dest: /root/.ssh/config
    become: true

  # - name: Add config file for ssh for github ncsu host
  #   template:
  #     src: config
  #     dest: ~/.ssh/config

  - name: Copy jenkins_jobs.ini file to jenkins server
    template:
     src: jenkins_jobs.ini
     dest: ~/jenkins_jobs.ini
    become: false 

  - name: Create a job folder
    file:
      path: "~/jobs"
      state: directory
    become: false
